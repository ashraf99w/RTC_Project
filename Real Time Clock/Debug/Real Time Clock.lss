
Real Time Clock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b9a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000005c  00800060  00000b9a  00000c2e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  008000bc  008000bc  00000c8a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c8a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000cbc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00000cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000016a8  00000000  00000000  00000e50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000980  00000000  00000000  000024f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ca3  00000000  00000000  00002e78  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000028c  00000000  00000000  00003b1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006b5  00000000  00000000  00003da8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e45  00000000  00000000  0000445d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  000052a2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 97 02 	jmp	0x52e	; 0x52e <__vector_5>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e9       	ldi	r30, 0x9A	; 154
  68:	fb e0       	ldi	r31, 0x0B	; 11
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 3b       	cpi	r26, 0xBC	; 188
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ac eb       	ldi	r26, 0xBC	; 188
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 3c       	cpi	r26, 0xC2	; 194
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 dd 00 	call	0x1ba	; 0x1ba <main>
  8a:	0c 94 cb 05 	jmp	0xb96	; 0xb96 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <keypad_vInit>:
  92:	84 e4       	ldi	r24, 0x44	; 68
  94:	60 e0       	ldi	r22, 0x00	; 0
  96:	41 e0       	ldi	r20, 0x01	; 1
  98:	0e 94 ce 02 	call	0x59c	; 0x59c <DIO_vsetPINDir>
  9c:	84 e4       	ldi	r24, 0x44	; 68
  9e:	61 e0       	ldi	r22, 0x01	; 1
  a0:	41 e0       	ldi	r20, 0x01	; 1
  a2:	0e 94 ce 02 	call	0x59c	; 0x59c <DIO_vsetPINDir>
  a6:	84 e4       	ldi	r24, 0x44	; 68
  a8:	62 e0       	ldi	r22, 0x02	; 2
  aa:	41 e0       	ldi	r20, 0x01	; 1
  ac:	0e 94 ce 02 	call	0x59c	; 0x59c <DIO_vsetPINDir>
  b0:	84 e4       	ldi	r24, 0x44	; 68
  b2:	63 e0       	ldi	r22, 0x03	; 3
  b4:	41 e0       	ldi	r20, 0x01	; 1
  b6:	0e 94 ce 02 	call	0x59c	; 0x59c <DIO_vsetPINDir>
  ba:	84 e4       	ldi	r24, 0x44	; 68
  bc:	64 e0       	ldi	r22, 0x04	; 4
  be:	40 e0       	ldi	r20, 0x00	; 0
  c0:	0e 94 ce 02 	call	0x59c	; 0x59c <DIO_vsetPINDir>
  c4:	84 e4       	ldi	r24, 0x44	; 68
  c6:	65 e0       	ldi	r22, 0x05	; 5
  c8:	40 e0       	ldi	r20, 0x00	; 0
  ca:	0e 94 ce 02 	call	0x59c	; 0x59c <DIO_vsetPINDir>
  ce:	84 e4       	ldi	r24, 0x44	; 68
  d0:	66 e0       	ldi	r22, 0x06	; 6
  d2:	40 e0       	ldi	r20, 0x00	; 0
  d4:	0e 94 ce 02 	call	0x59c	; 0x59c <DIO_vsetPINDir>
  d8:	84 e4       	ldi	r24, 0x44	; 68
  da:	67 e0       	ldi	r22, 0x07	; 7
  dc:	40 e0       	ldi	r20, 0x00	; 0
  de:	0e 94 ce 02 	call	0x59c	; 0x59c <DIO_vsetPINDir>
  e2:	84 e4       	ldi	r24, 0x44	; 68
  e4:	64 e0       	ldi	r22, 0x04	; 4
  e6:	41 e0       	ldi	r20, 0x01	; 1
  e8:	0e 94 29 04 	call	0x852	; 0x852 <DIO_vconnectpullup>
  ec:	84 e4       	ldi	r24, 0x44	; 68
  ee:	65 e0       	ldi	r22, 0x05	; 5
  f0:	41 e0       	ldi	r20, 0x01	; 1
  f2:	0e 94 29 04 	call	0x852	; 0x852 <DIO_vconnectpullup>
  f6:	84 e4       	ldi	r24, 0x44	; 68
  f8:	66 e0       	ldi	r22, 0x06	; 6
  fa:	41 e0       	ldi	r20, 0x01	; 1
  fc:	0e 94 29 04 	call	0x852	; 0x852 <DIO_vconnectpullup>
 100:	84 e4       	ldi	r24, 0x44	; 68
 102:	67 e0       	ldi	r22, 0x07	; 7
 104:	41 e0       	ldi	r20, 0x01	; 1
 106:	0e 94 29 04 	call	0x852	; 0x852 <DIO_vconnectpullup>
 10a:	08 95       	ret

0000010c <keypad_u8check_press>:
 10c:	0f 93       	push	r16
 10e:	1f 93       	push	r17
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	cd b7       	in	r28, 0x3d	; 61
 116:	de b7       	in	r29, 0x3e	; 62
 118:	60 97       	sbiw	r28, 0x10	; 16
 11a:	0f b6       	in	r0, 0x3f	; 63
 11c:	f8 94       	cli
 11e:	de bf       	out	0x3e, r29	; 62
 120:	0f be       	out	0x3f, r0	; 63
 122:	cd bf       	out	0x3d, r28	; 61
 124:	de 01       	movw	r26, r28
 126:	11 96       	adiw	r26, 0x01	; 1
 128:	e0 e6       	ldi	r30, 0x60	; 96
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	80 e1       	ldi	r24, 0x10	; 16
 12e:	01 90       	ld	r0, Z+
 130:	0d 92       	st	X+, r0
 132:	81 50       	subi	r24, 0x01	; 1
 134:	e1 f7       	brne	.-8      	; 0x12e <keypad_u8check_press+0x22>
 136:	00 e0       	ldi	r16, 0x00	; 0
 138:	84 e4       	ldi	r24, 0x44	; 68
 13a:	60 e0       	ldi	r22, 0x00	; 0
 13c:	41 e0       	ldi	r20, 0x01	; 1
 13e:	0e 94 3e 03 	call	0x67c	; 0x67c <DIO_write>
 142:	84 e4       	ldi	r24, 0x44	; 68
 144:	61 e0       	ldi	r22, 0x01	; 1
 146:	41 e0       	ldi	r20, 0x01	; 1
 148:	0e 94 3e 03 	call	0x67c	; 0x67c <DIO_write>
 14c:	84 e4       	ldi	r24, 0x44	; 68
 14e:	62 e0       	ldi	r22, 0x02	; 2
 150:	41 e0       	ldi	r20, 0x01	; 1
 152:	0e 94 3e 03 	call	0x67c	; 0x67c <DIO_write>
 156:	84 e4       	ldi	r24, 0x44	; 68
 158:	63 e0       	ldi	r22, 0x03	; 3
 15a:	41 e0       	ldi	r20, 0x01	; 1
 15c:	0e 94 3e 03 	call	0x67c	; 0x67c <DIO_write>
 160:	84 e4       	ldi	r24, 0x44	; 68
 162:	60 2f       	mov	r22, r16
 164:	40 e0       	ldi	r20, 0x00	; 0
 166:	0e 94 3e 03 	call	0x67c	; 0x67c <DIO_write>
 16a:	10 e0       	ldi	r17, 0x00	; 0
 16c:	61 2f       	mov	r22, r17
 16e:	6c 5f       	subi	r22, 0xFC	; 252
 170:	84 e4       	ldi	r24, 0x44	; 68
 172:	0e 94 ae 03 	call	0x75c	; 0x75c <DIO_u8read>
 176:	88 23       	and	r24, r24
 178:	61 f4       	brne	.+24     	; 0x192 <keypad_u8check_press+0x86>
 17a:	e0 2f       	mov	r30, r16
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	ee 0f       	add	r30, r30
 180:	ff 1f       	adc	r31, r31
 182:	ee 0f       	add	r30, r30
 184:	ff 1f       	adc	r31, r31
 186:	e1 0f       	add	r30, r17
 188:	f1 1d       	adc	r31, r1
 18a:	ec 0f       	add	r30, r28
 18c:	fd 1f       	adc	r31, r29
 18e:	81 81       	ldd	r24, Z+1	; 0x01
 190:	04 c0       	rjmp	.+8      	; 0x19a <keypad_u8check_press+0x8e>
 192:	1f 5f       	subi	r17, 0xFF	; 255
 194:	14 30       	cpi	r17, 0x04	; 4
 196:	51 f7       	brne	.-44     	; 0x16c <keypad_u8check_press+0x60>
 198:	0b c0       	rjmp	.+22     	; 0x1b0 <keypad_u8check_press+0xa4>
 19a:	60 96       	adiw	r28, 0x10	; 16
 19c:	0f b6       	in	r0, 0x3f	; 63
 19e:	f8 94       	cli
 1a0:	de bf       	out	0x3e, r29	; 62
 1a2:	0f be       	out	0x3f, r0	; 63
 1a4:	cd bf       	out	0x3d, r28	; 61
 1a6:	df 91       	pop	r29
 1a8:	cf 91       	pop	r28
 1aa:	1f 91       	pop	r17
 1ac:	0f 91       	pop	r16
 1ae:	08 95       	ret
 1b0:	0f 5f       	subi	r16, 0xFF	; 255
 1b2:	04 30       	cpi	r16, 0x04	; 4
 1b4:	09 f6       	brne	.-126    	; 0x138 <keypad_u8check_press+0x2c>
 1b6:	8f ef       	ldi	r24, 0xFF	; 255
 1b8:	f0 cf       	rjmp	.-32     	; 0x19a <keypad_u8check_press+0x8e>

000001ba <main>:
 1ba:	0e 94 49 00 	call	0x92	; 0x92 <keypad_vInit>
 1be:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <LCD_vInit>
 1c2:	82 e4       	ldi	r24, 0x42	; 66
 1c4:	0e 94 a8 02 	call	0x550	; 0x550 <seven_seg_vinit>
 1c8:	a0 9a       	sbi	0x14, 0	; 20
 1ca:	a1 9a       	sbi	0x14, 1	; 20
 1cc:	a2 9a       	sbi	0x14, 2	; 20
 1ce:	a3 9a       	sbi	0x14, 3	; 20
 1d0:	a4 9a       	sbi	0x14, 4	; 20
 1d2:	a5 9a       	sbi	0x14, 5	; 20
 1d4:	80 e7       	ldi	r24, 0x70	; 112
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	0e 94 79 05 	call	0xaf2	; 0xaf2 <LCD_vSend_string>
 1dc:	82 e0       	ldi	r24, 0x02	; 2
 1de:	61 e0       	ldi	r22, 0x01	; 1
 1e0:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_movecursor>
 1e4:	8b e7       	ldi	r24, 0x7B	; 123
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	0e 94 79 05 	call	0xaf2	; 0xaf2 <LCD_vSend_string>
 1ec:	0e 94 b1 05 	call	0xb62	; 0xb62 <timer2_overflow_init_interrupt>
 1f0:	0f 2e       	mov	r0, r31
 1f2:	f4 ea       	ldi	r31, 0xA4	; 164
 1f4:	cf 2e       	mov	r12, r31
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	df 2e       	mov	r13, r31
 1fa:	f0 2d       	mov	r31, r0
 1fc:	00 e7       	ldi	r16, 0x70	; 112
 1fe:	10 e0       	ldi	r17, 0x00	; 0
 200:	0f 2e       	mov	r0, r31
 202:	fb e7       	ldi	r31, 0x7B	; 123
 204:	ef 2e       	mov	r14, r31
 206:	f0 e0       	ldi	r31, 0x00	; 0
 208:	ff 2e       	mov	r15, r31
 20a:	f0 2d       	mov	r31, r0
 20c:	0f 2e       	mov	r0, r31
 20e:	f5 e8       	ldi	r31, 0x85	; 133
 210:	af 2e       	mov	r10, r31
 212:	f0 e0       	ldi	r31, 0x00	; 0
 214:	bf 2e       	mov	r11, r31
 216:	f0 2d       	mov	r31, r0
 218:	0f 2e       	mov	r0, r31
 21a:	fe e8       	ldi	r31, 0x8E	; 142
 21c:	8f 2e       	mov	r8, r31
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	9f 2e       	mov	r9, r31
 222:	f0 2d       	mov	r31, r0
 224:	0f 2e       	mov	r0, r31
 226:	f9 e9       	ldi	r31, 0x99	; 153
 228:	6f 2e       	mov	r6, r31
 22a:	f0 e0       	ldi	r31, 0x00	; 0
 22c:	7f 2e       	mov	r7, r31
 22e:	f0 2d       	mov	r31, r0
 230:	ca e0       	ldi	r28, 0x0A	; 10
 232:	0e 94 86 00 	call	0x10c	; 0x10c <keypad_u8check_press>
 236:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <value>
 23a:	8f 3f       	cpi	r24, 0xFF	; 255
 23c:	09 f4       	brne	.+2      	; 0x240 <main+0x86>
 23e:	db c0       	rjmp	.+438    	; 0x3f6 <main+0x23c>
 240:	81 33       	cpi	r24, 0x31	; 49
 242:	09 f0       	breq	.+2      	; 0x246 <main+0x8c>
 244:	be c0       	rjmp	.+380    	; 0x3c2 <main+0x208>
 246:	0e 94 88 05 	call	0xb10	; 0xb10 <LCD_clearscreen>
 24a:	c5 01       	movw	r24, r10
 24c:	0e 94 79 05 	call	0xaf2	; 0xaf2 <LCD_vSend_string>
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	67 e0       	ldi	r22, 0x07	; 7
 254:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_movecursor>
 258:	8f ef       	ldi	r24, 0xFF	; 255
 25a:	94 e3       	ldi	r25, 0x34	; 52
 25c:	ac e0       	ldi	r26, 0x0C	; 12
 25e:	81 50       	subi	r24, 0x01	; 1
 260:	90 40       	sbci	r25, 0x00	; 0
 262:	a0 40       	sbci	r26, 0x00	; 0
 264:	e1 f7       	brne	.-8      	; 0x25e <main+0xa4>
 266:	00 c0       	rjmp	.+0      	; 0x268 <main+0xae>
 268:	00 00       	nop
 26a:	0e 94 86 00 	call	0x10c	; 0x10c <keypad_u8check_press>
 26e:	80 93 bf 00 	sts	0x00BF, r24	; 0x8000bf <first_digit>
 272:	8f 3f       	cpi	r24, 0xFF	; 255
 274:	d1 f3       	breq	.-12     	; 0x26a <main+0xb0>
 276:	0e 94 57 05 	call	0xaae	; 0xaae <LCD_vSend_char>
 27a:	8f ef       	ldi	r24, 0xFF	; 255
 27c:	92 e5       	ldi	r25, 0x52	; 82
 27e:	a7 e0       	ldi	r26, 0x07	; 7
 280:	81 50       	subi	r24, 0x01	; 1
 282:	90 40       	sbci	r25, 0x00	; 0
 284:	a0 40       	sbci	r26, 0x00	; 0
 286:	e1 f7       	brne	.-8      	; 0x280 <main+0xc6>
 288:	00 c0       	rjmp	.+0      	; 0x28a <main+0xd0>
 28a:	00 00       	nop
 28c:	0e 94 86 00 	call	0x10c	; 0x10c <keypad_u8check_press>
 290:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <second_digit>
 294:	8f 3f       	cpi	r24, 0xFF	; 255
 296:	d1 f3       	breq	.-12     	; 0x28c <main+0xd2>
 298:	0e 94 57 05 	call	0xaae	; 0xaae <LCD_vSend_char>
 29c:	8f ef       	ldi	r24, 0xFF	; 255
 29e:	92 e5       	ldi	r25, 0x52	; 82
 2a0:	a7 e0       	ldi	r26, 0x07	; 7
 2a2:	81 50       	subi	r24, 0x01	; 1
 2a4:	90 40       	sbci	r25, 0x00	; 0
 2a6:	a0 40       	sbci	r26, 0x00	; 0
 2a8:	e1 f7       	brne	.-8      	; 0x2a2 <main+0xe8>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <main+0xf2>
 2ac:	00 00       	nop
 2ae:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <second_digit>
 2b2:	90 51       	subi	r25, 0x10	; 16
 2b4:	80 91 bf 00 	lds	r24, 0x00BF	; 0x8000bf <first_digit>
 2b8:	88 0f       	add	r24, r24
 2ba:	28 2f       	mov	r18, r24
 2bc:	22 0f       	add	r18, r18
 2be:	22 0f       	add	r18, r18
 2c0:	82 0f       	add	r24, r18
 2c2:	89 0f       	add	r24, r25
 2c4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__data_end>
 2c8:	0e 94 88 05 	call	0xb10	; 0xb10 <LCD_clearscreen>
 2cc:	c4 01       	movw	r24, r8
 2ce:	0e 94 79 05 	call	0xaf2	; 0xaf2 <LCD_vSend_string>
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	69 e0       	ldi	r22, 0x09	; 9
 2d6:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_movecursor>
 2da:	0e 94 86 00 	call	0x10c	; 0x10c <keypad_u8check_press>
 2de:	80 93 bf 00 	sts	0x00BF, r24	; 0x8000bf <first_digit>
 2e2:	8f 3f       	cpi	r24, 0xFF	; 255
 2e4:	d1 f3       	breq	.-12     	; 0x2da <main+0x120>
 2e6:	0e 94 57 05 	call	0xaae	; 0xaae <LCD_vSend_char>
 2ea:	8f ef       	ldi	r24, 0xFF	; 255
 2ec:	92 e5       	ldi	r25, 0x52	; 82
 2ee:	a7 e0       	ldi	r26, 0x07	; 7
 2f0:	81 50       	subi	r24, 0x01	; 1
 2f2:	90 40       	sbci	r25, 0x00	; 0
 2f4:	a0 40       	sbci	r26, 0x00	; 0
 2f6:	e1 f7       	brne	.-8      	; 0x2f0 <main+0x136>
 2f8:	00 c0       	rjmp	.+0      	; 0x2fa <main+0x140>
 2fa:	00 00       	nop
 2fc:	0e 94 86 00 	call	0x10c	; 0x10c <keypad_u8check_press>
 300:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <second_digit>
 304:	8f 3f       	cpi	r24, 0xFF	; 255
 306:	d1 f3       	breq	.-12     	; 0x2fc <main+0x142>
 308:	0e 94 57 05 	call	0xaae	; 0xaae <LCD_vSend_char>
 30c:	8f ef       	ldi	r24, 0xFF	; 255
 30e:	92 e5       	ldi	r25, 0x52	; 82
 310:	a7 e0       	ldi	r26, 0x07	; 7
 312:	81 50       	subi	r24, 0x01	; 1
 314:	90 40       	sbci	r25, 0x00	; 0
 316:	a0 40       	sbci	r26, 0x00	; 0
 318:	e1 f7       	brne	.-8      	; 0x312 <main+0x158>
 31a:	00 c0       	rjmp	.+0      	; 0x31c <main+0x162>
 31c:	00 00       	nop
 31e:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <second_digit>
 322:	90 51       	subi	r25, 0x10	; 16
 324:	80 91 bf 00 	lds	r24, 0x00BF	; 0x8000bf <first_digit>
 328:	88 0f       	add	r24, r24
 32a:	28 2f       	mov	r18, r24
 32c:	22 0f       	add	r18, r18
 32e:	22 0f       	add	r18, r18
 330:	82 0f       	add	r24, r18
 332:	89 0f       	add	r24, r25
 334:	80 93 bd 00 	sts	0x00BD, r24	; 0x8000bd <minutes_counter>
 338:	0e 94 88 05 	call	0xb10	; 0xb10 <LCD_clearscreen>
 33c:	c3 01       	movw	r24, r6
 33e:	0e 94 79 05 	call	0xaf2	; 0xaf2 <LCD_vSend_string>
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	69 e0       	ldi	r22, 0x09	; 9
 346:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_movecursor>
 34a:	0e 94 86 00 	call	0x10c	; 0x10c <keypad_u8check_press>
 34e:	80 93 bf 00 	sts	0x00BF, r24	; 0x8000bf <first_digit>
 352:	8f 3f       	cpi	r24, 0xFF	; 255
 354:	d1 f3       	breq	.-12     	; 0x34a <main+0x190>
 356:	0e 94 57 05 	call	0xaae	; 0xaae <LCD_vSend_char>
 35a:	8f ef       	ldi	r24, 0xFF	; 255
 35c:	92 e5       	ldi	r25, 0x52	; 82
 35e:	a7 e0       	ldi	r26, 0x07	; 7
 360:	81 50       	subi	r24, 0x01	; 1
 362:	90 40       	sbci	r25, 0x00	; 0
 364:	a0 40       	sbci	r26, 0x00	; 0
 366:	e1 f7       	brne	.-8      	; 0x360 <main+0x1a6>
 368:	00 c0       	rjmp	.+0      	; 0x36a <main+0x1b0>
 36a:	00 00       	nop
 36c:	0e 94 86 00 	call	0x10c	; 0x10c <keypad_u8check_press>
 370:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <second_digit>
 374:	8f 3f       	cpi	r24, 0xFF	; 255
 376:	d1 f3       	breq	.-12     	; 0x36c <main+0x1b2>
 378:	0e 94 57 05 	call	0xaae	; 0xaae <LCD_vSend_char>
 37c:	8f ef       	ldi	r24, 0xFF	; 255
 37e:	92 e5       	ldi	r25, 0x52	; 82
 380:	a7 e0       	ldi	r26, 0x07	; 7
 382:	81 50       	subi	r24, 0x01	; 1
 384:	90 40       	sbci	r25, 0x00	; 0
 386:	a0 40       	sbci	r26, 0x00	; 0
 388:	e1 f7       	brne	.-8      	; 0x382 <main+0x1c8>
 38a:	00 c0       	rjmp	.+0      	; 0x38c <main+0x1d2>
 38c:	00 00       	nop
 38e:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <second_digit>
 392:	90 51       	subi	r25, 0x10	; 16
 394:	80 91 bf 00 	lds	r24, 0x00BF	; 0x8000bf <first_digit>
 398:	88 0f       	add	r24, r24
 39a:	28 2f       	mov	r18, r24
 39c:	22 0f       	add	r18, r18
 39e:	22 0f       	add	r18, r18
 3a0:	82 0f       	add	r24, r18
 3a2:	89 0f       	add	r24, r25
 3a4:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <seconds_counter>
 3a8:	0e 94 88 05 	call	0xb10	; 0xb10 <LCD_clearscreen>
 3ac:	c8 01       	movw	r24, r16
 3ae:	0e 94 79 05 	call	0xaf2	; 0xaf2 <LCD_vSend_string>
 3b2:	82 e0       	ldi	r24, 0x02	; 2
 3b4:	61 e0       	ldi	r22, 0x01	; 1
 3b6:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_movecursor>
 3ba:	c7 01       	movw	r24, r14
 3bc:	0e 94 79 05 	call	0xaf2	; 0xaf2 <LCD_vSend_string>
 3c0:	1a c0       	rjmp	.+52     	; 0x3f6 <main+0x23c>
 3c2:	0e 94 88 05 	call	0xb10	; 0xb10 <LCD_clearscreen>
 3c6:	c6 01       	movw	r24, r12
 3c8:	0e 94 79 05 	call	0xaf2	; 0xaf2 <LCD_vSend_string>
 3cc:	8f ef       	ldi	r24, 0xFF	; 255
 3ce:	99 e6       	ldi	r25, 0x69	; 105
 3d0:	a8 e1       	ldi	r26, 0x18	; 24
 3d2:	81 50       	subi	r24, 0x01	; 1
 3d4:	90 40       	sbci	r25, 0x00	; 0
 3d6:	a0 40       	sbci	r26, 0x00	; 0
 3d8:	e1 f7       	brne	.-8      	; 0x3d2 <main+0x218>
 3da:	00 c0       	rjmp	.+0      	; 0x3dc <main+0x222>
 3dc:	00 00       	nop
 3de:	0e 94 88 05 	call	0xb10	; 0xb10 <LCD_clearscreen>
 3e2:	c8 01       	movw	r24, r16
 3e4:	0e 94 79 05 	call	0xaf2	; 0xaf2 <LCD_vSend_string>
 3e8:	82 e0       	ldi	r24, 0x02	; 2
 3ea:	61 e0       	ldi	r22, 0x01	; 1
 3ec:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_movecursor>
 3f0:	c7 01       	movw	r24, r14
 3f2:	0e 94 79 05 	call	0xaf2	; 0xaf2 <LCD_vSend_string>
 3f6:	a9 9a       	sbi	0x15, 1	; 21
 3f8:	aa 9a       	sbi	0x15, 2	; 21
 3fa:	ab 9a       	sbi	0x15, 3	; 21
 3fc:	ac 9a       	sbi	0x15, 4	; 21
 3fe:	ad 9a       	sbi	0x15, 5	; 21
 400:	a8 98       	cbi	0x15, 0	; 21
 402:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <seconds_counter>
 406:	6c 2f       	mov	r22, r28
 408:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__udivmodqi4>
 40c:	82 e4       	ldi	r24, 0x42	; 66
 40e:	69 2f       	mov	r22, r25
 410:	0e 94 ac 02 	call	0x558	; 0x558 <seven_seg_write>
 414:	af e0       	ldi	r26, 0x0F	; 15
 416:	b7 e2       	ldi	r27, 0x27	; 39
 418:	11 97       	sbiw	r26, 0x01	; 1
 41a:	f1 f7       	brne	.-4      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 41c:	00 c0       	rjmp	.+0      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 41e:	00 00       	nop
 420:	a8 9a       	sbi	0x15, 0	; 21
 422:	aa 9a       	sbi	0x15, 2	; 21
 424:	ab 9a       	sbi	0x15, 3	; 21
 426:	ac 9a       	sbi	0x15, 4	; 21
 428:	ad 9a       	sbi	0x15, 5	; 21
 42a:	a9 98       	cbi	0x15, 1	; 21
 42c:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <seconds_counter>
 430:	6c 2f       	mov	r22, r28
 432:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__udivmodqi4>
 436:	68 2f       	mov	r22, r24
 438:	82 e4       	ldi	r24, 0x42	; 66
 43a:	0e 94 ac 02 	call	0x558	; 0x558 <seven_seg_write>
 43e:	8f e0       	ldi	r24, 0x0F	; 15
 440:	97 e2       	ldi	r25, 0x27	; 39
 442:	01 97       	sbiw	r24, 0x01	; 1
 444:	f1 f7       	brne	.-4      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 446:	00 c0       	rjmp	.+0      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 448:	00 00       	nop
 44a:	a8 9a       	sbi	0x15, 0	; 21
 44c:	a9 9a       	sbi	0x15, 1	; 21
 44e:	ab 9a       	sbi	0x15, 3	; 21
 450:	ac 9a       	sbi	0x15, 4	; 21
 452:	ad 9a       	sbi	0x15, 5	; 21
 454:	aa 98       	cbi	0x15, 2	; 21
 456:	80 91 bd 00 	lds	r24, 0x00BD	; 0x8000bd <minutes_counter>
 45a:	6c 2f       	mov	r22, r28
 45c:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__udivmodqi4>
 460:	82 e4       	ldi	r24, 0x42	; 66
 462:	69 2f       	mov	r22, r25
 464:	0e 94 ac 02 	call	0x558	; 0x558 <seven_seg_write>
 468:	af e0       	ldi	r26, 0x0F	; 15
 46a:	b7 e2       	ldi	r27, 0x27	; 39
 46c:	11 97       	sbiw	r26, 0x01	; 1
 46e:	f1 f7       	brne	.-4      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 470:	00 c0       	rjmp	.+0      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 472:	00 00       	nop
 474:	a8 9a       	sbi	0x15, 0	; 21
 476:	a9 9a       	sbi	0x15, 1	; 21
 478:	aa 9a       	sbi	0x15, 2	; 21
 47a:	ac 9a       	sbi	0x15, 4	; 21
 47c:	ad 9a       	sbi	0x15, 5	; 21
 47e:	ab 98       	cbi	0x15, 3	; 21
 480:	80 91 bd 00 	lds	r24, 0x00BD	; 0x8000bd <minutes_counter>
 484:	6c 2f       	mov	r22, r28
 486:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__udivmodqi4>
 48a:	68 2f       	mov	r22, r24
 48c:	82 e4       	ldi	r24, 0x42	; 66
 48e:	0e 94 ac 02 	call	0x558	; 0x558 <seven_seg_write>
 492:	8f e0       	ldi	r24, 0x0F	; 15
 494:	97 e2       	ldi	r25, 0x27	; 39
 496:	01 97       	sbiw	r24, 0x01	; 1
 498:	f1 f7       	brne	.-4      	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 49a:	00 c0       	rjmp	.+0      	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
 49c:	00 00       	nop
 49e:	a8 9a       	sbi	0x15, 0	; 21
 4a0:	a9 9a       	sbi	0x15, 1	; 21
 4a2:	aa 9a       	sbi	0x15, 2	; 21
 4a4:	ab 9a       	sbi	0x15, 3	; 21
 4a6:	ad 9a       	sbi	0x15, 5	; 21
 4a8:	ac 98       	cbi	0x15, 4	; 21
 4aa:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__data_end>
 4ae:	6c 2f       	mov	r22, r28
 4b0:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__udivmodqi4>
 4b4:	82 e4       	ldi	r24, 0x42	; 66
 4b6:	69 2f       	mov	r22, r25
 4b8:	0e 94 ac 02 	call	0x558	; 0x558 <seven_seg_write>
 4bc:	af e0       	ldi	r26, 0x0F	; 15
 4be:	b7 e2       	ldi	r27, 0x27	; 39
 4c0:	11 97       	sbiw	r26, 0x01	; 1
 4c2:	f1 f7       	brne	.-4      	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 4c4:	00 c0       	rjmp	.+0      	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 4c6:	00 00       	nop
 4c8:	a8 9a       	sbi	0x15, 0	; 21
 4ca:	a9 9a       	sbi	0x15, 1	; 21
 4cc:	aa 9a       	sbi	0x15, 2	; 21
 4ce:	ab 9a       	sbi	0x15, 3	; 21
 4d0:	ac 9a       	sbi	0x15, 4	; 21
 4d2:	ad 98       	cbi	0x15, 5	; 21
 4d4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__data_end>
 4d8:	6c 2f       	mov	r22, r28
 4da:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__udivmodqi4>
 4de:	68 2f       	mov	r22, r24
 4e0:	82 e4       	ldi	r24, 0x42	; 66
 4e2:	0e 94 ac 02 	call	0x558	; 0x558 <seven_seg_write>
 4e6:	8f e0       	ldi	r24, 0x0F	; 15
 4e8:	97 e2       	ldi	r25, 0x27	; 39
 4ea:	01 97       	sbiw	r24, 0x01	; 1
 4ec:	f1 f7       	brne	.-4      	; 0x4ea <__EEPROM_REGION_LENGTH__+0xea>
 4ee:	00 c0       	rjmp	.+0      	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
 4f0:	00 00       	nop
 4f2:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <seconds_counter>
 4f6:	8c 33       	cpi	r24, 0x3C	; 60
 4f8:	39 f4       	brne	.+14     	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 4fa:	10 92 be 00 	sts	0x00BE, r1	; 0x8000be <seconds_counter>
 4fe:	80 91 bd 00 	lds	r24, 0x00BD	; 0x8000bd <minutes_counter>
 502:	8f 5f       	subi	r24, 0xFF	; 255
 504:	80 93 bd 00 	sts	0x00BD, r24	; 0x8000bd <minutes_counter>
 508:	80 91 bd 00 	lds	r24, 0x00BD	; 0x8000bd <minutes_counter>
 50c:	8c 33       	cpi	r24, 0x3C	; 60
 50e:	39 f4       	brne	.+14     	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
 510:	10 92 bd 00 	sts	0x00BD, r1	; 0x8000bd <minutes_counter>
 514:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__data_end>
 518:	8f 5f       	subi	r24, 0xFF	; 255
 51a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__data_end>
 51e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__data_end>
 522:	88 31       	cpi	r24, 0x18	; 24
 524:	09 f0       	breq	.+2      	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 526:	85 ce       	rjmp	.-758    	; 0x232 <main+0x78>
 528:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__data_end>
 52c:	82 ce       	rjmp	.-764    	; 0x232 <main+0x78>

0000052e <__vector_5>:
 52e:	1f 92       	push	r1
 530:	0f 92       	push	r0
 532:	0f b6       	in	r0, 0x3f	; 63
 534:	0f 92       	push	r0
 536:	11 24       	eor	r1, r1
 538:	8f 93       	push	r24
 53a:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <seconds_counter>
 53e:	8f 5f       	subi	r24, 0xFF	; 255
 540:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <seconds_counter>
 544:	8f 91       	pop	r24
 546:	0f 90       	pop	r0
 548:	0f be       	out	0x3f, r0	; 63
 54a:	0f 90       	pop	r0
 54c:	1f 90       	pop	r1
 54e:	18 95       	reti

00000550 <seven_seg_vinit>:
 550:	6f ef       	ldi	r22, 0xFF	; 255
 552:	0e 94 03 04 	call	0x806	; 0x806 <DIO_set_port_direction>
 556:	08 95       	ret

00000558 <seven_seg_write>:
 558:	cf 93       	push	r28
 55a:	df 93       	push	r29
 55c:	cd b7       	in	r28, 0x3d	; 61
 55e:	de b7       	in	r29, 0x3e	; 62
 560:	2a 97       	sbiw	r28, 0x0a	; 10
 562:	0f b6       	in	r0, 0x3f	; 63
 564:	f8 94       	cli
 566:	de bf       	out	0x3e, r29	; 62
 568:	0f be       	out	0x3f, r0	; 63
 56a:	cd bf       	out	0x3d, r28	; 61
 56c:	de 01       	movw	r26, r28
 56e:	11 96       	adiw	r26, 0x01	; 1
 570:	e1 eb       	ldi	r30, 0xB1	; 177
 572:	f0 e0       	ldi	r31, 0x00	; 0
 574:	9a e0       	ldi	r25, 0x0A	; 10
 576:	01 90       	ld	r0, Z+
 578:	0d 92       	st	X+, r0
 57a:	91 50       	subi	r25, 0x01	; 1
 57c:	e1 f7       	brne	.-8      	; 0x576 <seven_seg_write+0x1e>
 57e:	fe 01       	movw	r30, r28
 580:	e6 0f       	add	r30, r22
 582:	f1 1d       	adc	r31, r1
 584:	61 81       	ldd	r22, Z+1	; 0x01
 586:	0e 94 16 04 	call	0x82c	; 0x82c <DIO_write_port>
 58a:	2a 96       	adiw	r28, 0x0a	; 10
 58c:	0f b6       	in	r0, 0x3f	; 63
 58e:	f8 94       	cli
 590:	de bf       	out	0x3e, r29	; 62
 592:	0f be       	out	0x3f, r0	; 63
 594:	cd bf       	out	0x3d, r28	; 61
 596:	df 91       	pop	r29
 598:	cf 91       	pop	r28
 59a:	08 95       	ret

0000059c <DIO_vsetPINDir>:
		case 'C':
		PORTC&=0xf0;
		PORTC|=value;
		case 'D':
		PORTD&=0xf0;
		PORTD|=value;
 59c:	82 34       	cpi	r24, 0x42	; 66
 59e:	19 f1       	breq	.+70     	; 0x5e6 <DIO_vsetPINDir+0x4a>
 5a0:	18 f4       	brcc	.+6      	; 0x5a8 <DIO_vsetPINDir+0xc>
 5a2:	81 34       	cpi	r24, 0x41	; 65
 5a4:	39 f0       	breq	.+14     	; 0x5b4 <DIO_vsetPINDir+0x18>
 5a6:	08 95       	ret
 5a8:	83 34       	cpi	r24, 0x43	; 67
 5aa:	b1 f1       	breq	.+108    	; 0x618 <DIO_vsetPINDir+0x7c>
 5ac:	84 34       	cpi	r24, 0x44	; 68
 5ae:	09 f4       	brne	.+2      	; 0x5b2 <DIO_vsetPINDir+0x16>
 5b0:	4c c0       	rjmp	.+152    	; 0x64a <DIO_vsetPINDir+0xae>
 5b2:	08 95       	ret
 5b4:	41 30       	cpi	r20, 0x01	; 1
 5b6:	59 f4       	brne	.+22     	; 0x5ce <DIO_vsetPINDir+0x32>
 5b8:	2a b3       	in	r18, 0x1a	; 26
 5ba:	81 e0       	ldi	r24, 0x01	; 1
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	02 c0       	rjmp	.+4      	; 0x5c4 <DIO_vsetPINDir+0x28>
 5c0:	88 0f       	add	r24, r24
 5c2:	99 1f       	adc	r25, r25
 5c4:	6a 95       	dec	r22
 5c6:	e2 f7       	brpl	.-8      	; 0x5c0 <DIO_vsetPINDir+0x24>
 5c8:	82 2b       	or	r24, r18
 5ca:	8a bb       	out	0x1a, r24	; 26
 5cc:	08 95       	ret
 5ce:	2a b3       	in	r18, 0x1a	; 26
 5d0:	81 e0       	ldi	r24, 0x01	; 1
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	02 c0       	rjmp	.+4      	; 0x5da <DIO_vsetPINDir+0x3e>
 5d6:	88 0f       	add	r24, r24
 5d8:	99 1f       	adc	r25, r25
 5da:	6a 95       	dec	r22
 5dc:	e2 f7       	brpl	.-8      	; 0x5d6 <DIO_vsetPINDir+0x3a>
 5de:	80 95       	com	r24
 5e0:	82 23       	and	r24, r18
 5e2:	8a bb       	out	0x1a, r24	; 26
 5e4:	08 95       	ret
 5e6:	41 30       	cpi	r20, 0x01	; 1
 5e8:	59 f4       	brne	.+22     	; 0x600 <DIO_vsetPINDir+0x64>
 5ea:	27 b3       	in	r18, 0x17	; 23
 5ec:	81 e0       	ldi	r24, 0x01	; 1
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <DIO_vsetPINDir+0x5a>
 5f2:	88 0f       	add	r24, r24
 5f4:	99 1f       	adc	r25, r25
 5f6:	6a 95       	dec	r22
 5f8:	e2 f7       	brpl	.-8      	; 0x5f2 <DIO_vsetPINDir+0x56>
 5fa:	82 2b       	or	r24, r18
 5fc:	87 bb       	out	0x17, r24	; 23
 5fe:	08 95       	ret
 600:	27 b3       	in	r18, 0x17	; 23
 602:	81 e0       	ldi	r24, 0x01	; 1
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	02 c0       	rjmp	.+4      	; 0x60c <DIO_vsetPINDir+0x70>
 608:	88 0f       	add	r24, r24
 60a:	99 1f       	adc	r25, r25
 60c:	6a 95       	dec	r22
 60e:	e2 f7       	brpl	.-8      	; 0x608 <DIO_vsetPINDir+0x6c>
 610:	80 95       	com	r24
 612:	82 23       	and	r24, r18
 614:	87 bb       	out	0x17, r24	; 23
 616:	08 95       	ret
 618:	41 30       	cpi	r20, 0x01	; 1
 61a:	59 f4       	brne	.+22     	; 0x632 <DIO_vsetPINDir+0x96>
 61c:	24 b3       	in	r18, 0x14	; 20
 61e:	81 e0       	ldi	r24, 0x01	; 1
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	02 c0       	rjmp	.+4      	; 0x628 <DIO_vsetPINDir+0x8c>
 624:	88 0f       	add	r24, r24
 626:	99 1f       	adc	r25, r25
 628:	6a 95       	dec	r22
 62a:	e2 f7       	brpl	.-8      	; 0x624 <DIO_vsetPINDir+0x88>
 62c:	82 2b       	or	r24, r18
 62e:	84 bb       	out	0x14, r24	; 20
 630:	08 95       	ret
 632:	24 b3       	in	r18, 0x14	; 20
 634:	81 e0       	ldi	r24, 0x01	; 1
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	02 c0       	rjmp	.+4      	; 0x63e <DIO_vsetPINDir+0xa2>
 63a:	88 0f       	add	r24, r24
 63c:	99 1f       	adc	r25, r25
 63e:	6a 95       	dec	r22
 640:	e2 f7       	brpl	.-8      	; 0x63a <DIO_vsetPINDir+0x9e>
 642:	80 95       	com	r24
 644:	82 23       	and	r24, r18
 646:	84 bb       	out	0x14, r24	; 20
 648:	08 95       	ret
 64a:	41 30       	cpi	r20, 0x01	; 1
 64c:	59 f4       	brne	.+22     	; 0x664 <DIO_vsetPINDir+0xc8>
 64e:	21 b3       	in	r18, 0x11	; 17
 650:	81 e0       	ldi	r24, 0x01	; 1
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	02 c0       	rjmp	.+4      	; 0x65a <DIO_vsetPINDir+0xbe>
 656:	88 0f       	add	r24, r24
 658:	99 1f       	adc	r25, r25
 65a:	6a 95       	dec	r22
 65c:	e2 f7       	brpl	.-8      	; 0x656 <DIO_vsetPINDir+0xba>
 65e:	82 2b       	or	r24, r18
 660:	81 bb       	out	0x11, r24	; 17
 662:	08 95       	ret
 664:	21 b3       	in	r18, 0x11	; 17
 666:	81 e0       	ldi	r24, 0x01	; 1
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	02 c0       	rjmp	.+4      	; 0x670 <DIO_vsetPINDir+0xd4>
 66c:	88 0f       	add	r24, r24
 66e:	99 1f       	adc	r25, r25
 670:	6a 95       	dec	r22
 672:	e2 f7       	brpl	.-8      	; 0x66c <DIO_vsetPINDir+0xd0>
 674:	80 95       	com	r24
 676:	82 23       	and	r24, r18
 678:	81 bb       	out	0x11, r24	; 17
 67a:	08 95       	ret

0000067c <DIO_write>:
 67c:	82 34       	cpi	r24, 0x42	; 66
 67e:	19 f1       	breq	.+70     	; 0x6c6 <DIO_write+0x4a>
 680:	18 f4       	brcc	.+6      	; 0x688 <DIO_write+0xc>
 682:	81 34       	cpi	r24, 0x41	; 65
 684:	39 f0       	breq	.+14     	; 0x694 <DIO_write+0x18>
 686:	08 95       	ret
 688:	83 34       	cpi	r24, 0x43	; 67
 68a:	b1 f1       	breq	.+108    	; 0x6f8 <DIO_write+0x7c>
 68c:	84 34       	cpi	r24, 0x44	; 68
 68e:	09 f4       	brne	.+2      	; 0x692 <DIO_write+0x16>
 690:	4c c0       	rjmp	.+152    	; 0x72a <DIO_write+0xae>
 692:	08 95       	ret
 694:	41 30       	cpi	r20, 0x01	; 1
 696:	59 f4       	brne	.+22     	; 0x6ae <DIO_write+0x32>
 698:	2b b3       	in	r18, 0x1b	; 27
 69a:	81 e0       	ldi	r24, 0x01	; 1
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	02 c0       	rjmp	.+4      	; 0x6a4 <DIO_write+0x28>
 6a0:	88 0f       	add	r24, r24
 6a2:	99 1f       	adc	r25, r25
 6a4:	6a 95       	dec	r22
 6a6:	e2 f7       	brpl	.-8      	; 0x6a0 <DIO_write+0x24>
 6a8:	82 2b       	or	r24, r18
 6aa:	8b bb       	out	0x1b, r24	; 27
 6ac:	08 95       	ret
 6ae:	2b b3       	in	r18, 0x1b	; 27
 6b0:	81 e0       	ldi	r24, 0x01	; 1
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	02 c0       	rjmp	.+4      	; 0x6ba <DIO_write+0x3e>
 6b6:	88 0f       	add	r24, r24
 6b8:	99 1f       	adc	r25, r25
 6ba:	6a 95       	dec	r22
 6bc:	e2 f7       	brpl	.-8      	; 0x6b6 <DIO_write+0x3a>
 6be:	80 95       	com	r24
 6c0:	82 23       	and	r24, r18
 6c2:	8b bb       	out	0x1b, r24	; 27
 6c4:	08 95       	ret
 6c6:	41 30       	cpi	r20, 0x01	; 1
 6c8:	59 f4       	brne	.+22     	; 0x6e0 <DIO_write+0x64>
 6ca:	28 b3       	in	r18, 0x18	; 24
 6cc:	81 e0       	ldi	r24, 0x01	; 1
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <DIO_write+0x5a>
 6d2:	88 0f       	add	r24, r24
 6d4:	99 1f       	adc	r25, r25
 6d6:	6a 95       	dec	r22
 6d8:	e2 f7       	brpl	.-8      	; 0x6d2 <DIO_write+0x56>
 6da:	82 2b       	or	r24, r18
 6dc:	88 bb       	out	0x18, r24	; 24
 6de:	08 95       	ret
 6e0:	28 b3       	in	r18, 0x18	; 24
 6e2:	81 e0       	ldi	r24, 0x01	; 1
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	02 c0       	rjmp	.+4      	; 0x6ec <DIO_write+0x70>
 6e8:	88 0f       	add	r24, r24
 6ea:	99 1f       	adc	r25, r25
 6ec:	6a 95       	dec	r22
 6ee:	e2 f7       	brpl	.-8      	; 0x6e8 <DIO_write+0x6c>
 6f0:	80 95       	com	r24
 6f2:	82 23       	and	r24, r18
 6f4:	88 bb       	out	0x18, r24	; 24
 6f6:	08 95       	ret
 6f8:	41 30       	cpi	r20, 0x01	; 1
 6fa:	59 f4       	brne	.+22     	; 0x712 <DIO_write+0x96>
 6fc:	25 b3       	in	r18, 0x15	; 21
 6fe:	81 e0       	ldi	r24, 0x01	; 1
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	02 c0       	rjmp	.+4      	; 0x708 <DIO_write+0x8c>
 704:	88 0f       	add	r24, r24
 706:	99 1f       	adc	r25, r25
 708:	6a 95       	dec	r22
 70a:	e2 f7       	brpl	.-8      	; 0x704 <DIO_write+0x88>
 70c:	82 2b       	or	r24, r18
 70e:	85 bb       	out	0x15, r24	; 21
 710:	08 95       	ret
 712:	25 b3       	in	r18, 0x15	; 21
 714:	81 e0       	ldi	r24, 0x01	; 1
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	02 c0       	rjmp	.+4      	; 0x71e <DIO_write+0xa2>
 71a:	88 0f       	add	r24, r24
 71c:	99 1f       	adc	r25, r25
 71e:	6a 95       	dec	r22
 720:	e2 f7       	brpl	.-8      	; 0x71a <DIO_write+0x9e>
 722:	80 95       	com	r24
 724:	82 23       	and	r24, r18
 726:	85 bb       	out	0x15, r24	; 21
 728:	08 95       	ret
 72a:	41 30       	cpi	r20, 0x01	; 1
 72c:	59 f4       	brne	.+22     	; 0x744 <DIO_write+0xc8>
 72e:	22 b3       	in	r18, 0x12	; 18
 730:	81 e0       	ldi	r24, 0x01	; 1
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	02 c0       	rjmp	.+4      	; 0x73a <DIO_write+0xbe>
 736:	88 0f       	add	r24, r24
 738:	99 1f       	adc	r25, r25
 73a:	6a 95       	dec	r22
 73c:	e2 f7       	brpl	.-8      	; 0x736 <DIO_write+0xba>
 73e:	82 2b       	or	r24, r18
 740:	82 bb       	out	0x12, r24	; 18
 742:	08 95       	ret
 744:	22 b3       	in	r18, 0x12	; 18
 746:	81 e0       	ldi	r24, 0x01	; 1
 748:	90 e0       	ldi	r25, 0x00	; 0
 74a:	02 c0       	rjmp	.+4      	; 0x750 <DIO_write+0xd4>
 74c:	88 0f       	add	r24, r24
 74e:	99 1f       	adc	r25, r25
 750:	6a 95       	dec	r22
 752:	e2 f7       	brpl	.-8      	; 0x74c <DIO_write+0xd0>
 754:	80 95       	com	r24
 756:	82 23       	and	r24, r18
 758:	82 bb       	out	0x12, r24	; 18
 75a:	08 95       	ret

0000075c <DIO_u8read>:
 75c:	82 34       	cpi	r24, 0x42	; 66
 75e:	d9 f0       	breq	.+54     	; 0x796 <DIO_u8read+0x3a>
 760:	18 f4       	brcc	.+6      	; 0x768 <DIO_u8read+0xc>
 762:	81 34       	cpi	r24, 0x41	; 65
 764:	31 f0       	breq	.+12     	; 0x772 <DIO_u8read+0x16>
 766:	4d c0       	rjmp	.+154    	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 768:	83 34       	cpi	r24, 0x43	; 67
 76a:	39 f1       	breq	.+78     	; 0x7ba <DIO_u8read+0x5e>
 76c:	84 34       	cpi	r24, 0x44	; 68
 76e:	b9 f1       	breq	.+110    	; 0x7de <DIO_u8read+0x82>
 770:	48 c0       	rjmp	.+144    	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 772:	29 b3       	in	r18, 0x19	; 25
 774:	81 e0       	ldi	r24, 0x01	; 1
 776:	90 e0       	ldi	r25, 0x00	; 0
 778:	06 2e       	mov	r0, r22
 77a:	02 c0       	rjmp	.+4      	; 0x780 <DIO_u8read+0x24>
 77c:	88 0f       	add	r24, r24
 77e:	99 1f       	adc	r25, r25
 780:	0a 94       	dec	r0
 782:	e2 f7       	brpl	.-8      	; 0x77c <DIO_u8read+0x20>
 784:	30 e0       	ldi	r19, 0x00	; 0
 786:	82 23       	and	r24, r18
 788:	93 23       	and	r25, r19
 78a:	02 c0       	rjmp	.+4      	; 0x790 <DIO_u8read+0x34>
 78c:	95 95       	asr	r25
 78e:	87 95       	ror	r24
 790:	6a 95       	dec	r22
 792:	e2 f7       	brpl	.-8      	; 0x78c <DIO_u8read+0x30>
 794:	08 95       	ret
 796:	26 b3       	in	r18, 0x16	; 22
 798:	81 e0       	ldi	r24, 0x01	; 1
 79a:	90 e0       	ldi	r25, 0x00	; 0
 79c:	06 2e       	mov	r0, r22
 79e:	02 c0       	rjmp	.+4      	; 0x7a4 <DIO_u8read+0x48>
 7a0:	88 0f       	add	r24, r24
 7a2:	99 1f       	adc	r25, r25
 7a4:	0a 94       	dec	r0
 7a6:	e2 f7       	brpl	.-8      	; 0x7a0 <DIO_u8read+0x44>
 7a8:	30 e0       	ldi	r19, 0x00	; 0
 7aa:	82 23       	and	r24, r18
 7ac:	93 23       	and	r25, r19
 7ae:	02 c0       	rjmp	.+4      	; 0x7b4 <DIO_u8read+0x58>
 7b0:	95 95       	asr	r25
 7b2:	87 95       	ror	r24
 7b4:	6a 95       	dec	r22
 7b6:	e2 f7       	brpl	.-8      	; 0x7b0 <DIO_u8read+0x54>
 7b8:	08 95       	ret
 7ba:	23 b3       	in	r18, 0x13	; 19
 7bc:	81 e0       	ldi	r24, 0x01	; 1
 7be:	90 e0       	ldi	r25, 0x00	; 0
 7c0:	06 2e       	mov	r0, r22
 7c2:	02 c0       	rjmp	.+4      	; 0x7c8 <DIO_u8read+0x6c>
 7c4:	88 0f       	add	r24, r24
 7c6:	99 1f       	adc	r25, r25
 7c8:	0a 94       	dec	r0
 7ca:	e2 f7       	brpl	.-8      	; 0x7c4 <DIO_u8read+0x68>
 7cc:	30 e0       	ldi	r19, 0x00	; 0
 7ce:	82 23       	and	r24, r18
 7d0:	93 23       	and	r25, r19
 7d2:	02 c0       	rjmp	.+4      	; 0x7d8 <DIO_u8read+0x7c>
 7d4:	95 95       	asr	r25
 7d6:	87 95       	ror	r24
 7d8:	6a 95       	dec	r22
 7da:	e2 f7       	brpl	.-8      	; 0x7d4 <DIO_u8read+0x78>
 7dc:	08 95       	ret
 7de:	20 b3       	in	r18, 0x10	; 16
 7e0:	81 e0       	ldi	r24, 0x01	; 1
 7e2:	90 e0       	ldi	r25, 0x00	; 0
 7e4:	06 2e       	mov	r0, r22
 7e6:	02 c0       	rjmp	.+4      	; 0x7ec <DIO_u8read+0x90>
 7e8:	88 0f       	add	r24, r24
 7ea:	99 1f       	adc	r25, r25
 7ec:	0a 94       	dec	r0
 7ee:	e2 f7       	brpl	.-8      	; 0x7e8 <DIO_u8read+0x8c>
 7f0:	30 e0       	ldi	r19, 0x00	; 0
 7f2:	82 23       	and	r24, r18
 7f4:	93 23       	and	r25, r19
 7f6:	02 c0       	rjmp	.+4      	; 0x7fc <DIO_u8read+0xa0>
 7f8:	95 95       	asr	r25
 7fa:	87 95       	ror	r24
 7fc:	6a 95       	dec	r22
 7fe:	e2 f7       	brpl	.-8      	; 0x7f8 <DIO_u8read+0x9c>
 800:	08 95       	ret
 802:	80 e0       	ldi	r24, 0x00	; 0
 804:	08 95       	ret

00000806 <DIO_set_port_direction>:
 806:	82 34       	cpi	r24, 0x42	; 66
 808:	59 f0       	breq	.+22     	; 0x820 <DIO_set_port_direction+0x1a>
 80a:	18 f4       	brcc	.+6      	; 0x812 <DIO_set_port_direction+0xc>
 80c:	81 34       	cpi	r24, 0x41	; 65
 80e:	31 f0       	breq	.+12     	; 0x81c <DIO_set_port_direction+0x16>
 810:	08 95       	ret
 812:	83 34       	cpi	r24, 0x43	; 67
 814:	39 f0       	breq	.+14     	; 0x824 <DIO_set_port_direction+0x1e>
 816:	84 34       	cpi	r24, 0x44	; 68
 818:	39 f0       	breq	.+14     	; 0x828 <DIO_set_port_direction+0x22>
 81a:	08 95       	ret
 81c:	6a bb       	out	0x1a, r22	; 26
 81e:	08 95       	ret
 820:	67 bb       	out	0x17, r22	; 23
 822:	08 95       	ret
 824:	64 bb       	out	0x14, r22	; 20
 826:	08 95       	ret
 828:	61 bb       	out	0x11, r22	; 17
 82a:	08 95       	ret

0000082c <DIO_write_port>:
 82c:	82 34       	cpi	r24, 0x42	; 66
 82e:	59 f0       	breq	.+22     	; 0x846 <DIO_write_port+0x1a>
 830:	18 f4       	brcc	.+6      	; 0x838 <DIO_write_port+0xc>
 832:	81 34       	cpi	r24, 0x41	; 65
 834:	31 f0       	breq	.+12     	; 0x842 <DIO_write_port+0x16>
 836:	08 95       	ret
 838:	83 34       	cpi	r24, 0x43	; 67
 83a:	39 f0       	breq	.+14     	; 0x84a <DIO_write_port+0x1e>
 83c:	84 34       	cpi	r24, 0x44	; 68
 83e:	39 f0       	breq	.+14     	; 0x84e <DIO_write_port+0x22>
 840:	08 95       	ret
 842:	6b bb       	out	0x1b, r22	; 27
 844:	08 95       	ret
 846:	68 bb       	out	0x18, r22	; 24
 848:	08 95       	ret
 84a:	65 bb       	out	0x15, r22	; 21
 84c:	08 95       	ret
 84e:	62 bb       	out	0x12, r22	; 18
 850:	08 95       	ret

00000852 <DIO_vconnectpullup>:
 852:	82 34       	cpi	r24, 0x42	; 66
 854:	19 f1       	breq	.+70     	; 0x89c <__stack+0x3d>
 856:	18 f4       	brcc	.+6      	; 0x85e <DIO_vconnectpullup+0xc>
 858:	81 34       	cpi	r24, 0x41	; 65
 85a:	39 f0       	breq	.+14     	; 0x86a <__stack+0xb>
 85c:	08 95       	ret
 85e:	83 34       	cpi	r24, 0x43	; 67
 860:	b1 f1       	breq	.+108    	; 0x8ce <__stack+0x6f>
 862:	84 34       	cpi	r24, 0x44	; 68
 864:	09 f4       	brne	.+2      	; 0x868 <__stack+0x9>
 866:	4c c0       	rjmp	.+152    	; 0x900 <__stack+0xa1>
 868:	08 95       	ret
 86a:	41 30       	cpi	r20, 0x01	; 1
 86c:	59 f4       	brne	.+22     	; 0x884 <__stack+0x25>
 86e:	2b b3       	in	r18, 0x1b	; 27
 870:	81 e0       	ldi	r24, 0x01	; 1
 872:	90 e0       	ldi	r25, 0x00	; 0
 874:	02 c0       	rjmp	.+4      	; 0x87a <__stack+0x1b>
 876:	88 0f       	add	r24, r24
 878:	99 1f       	adc	r25, r25
 87a:	6a 95       	dec	r22
 87c:	e2 f7       	brpl	.-8      	; 0x876 <__stack+0x17>
 87e:	82 2b       	or	r24, r18
 880:	8b bb       	out	0x1b, r24	; 27
 882:	08 95       	ret
 884:	2b b3       	in	r18, 0x1b	; 27
 886:	81 e0       	ldi	r24, 0x01	; 1
 888:	90 e0       	ldi	r25, 0x00	; 0
 88a:	02 c0       	rjmp	.+4      	; 0x890 <__stack+0x31>
 88c:	88 0f       	add	r24, r24
 88e:	99 1f       	adc	r25, r25
 890:	6a 95       	dec	r22
 892:	e2 f7       	brpl	.-8      	; 0x88c <__stack+0x2d>
 894:	80 95       	com	r24
 896:	82 23       	and	r24, r18
 898:	8b bb       	out	0x1b, r24	; 27
 89a:	08 95       	ret
 89c:	41 30       	cpi	r20, 0x01	; 1
 89e:	59 f4       	brne	.+22     	; 0x8b6 <__stack+0x57>
 8a0:	28 b3       	in	r18, 0x18	; 24
 8a2:	81 e0       	ldi	r24, 0x01	; 1
 8a4:	90 e0       	ldi	r25, 0x00	; 0
 8a6:	02 c0       	rjmp	.+4      	; 0x8ac <__stack+0x4d>
 8a8:	88 0f       	add	r24, r24
 8aa:	99 1f       	adc	r25, r25
 8ac:	6a 95       	dec	r22
 8ae:	e2 f7       	brpl	.-8      	; 0x8a8 <__stack+0x49>
 8b0:	82 2b       	or	r24, r18
 8b2:	88 bb       	out	0x18, r24	; 24
 8b4:	08 95       	ret
 8b6:	28 b3       	in	r18, 0x18	; 24
 8b8:	81 e0       	ldi	r24, 0x01	; 1
 8ba:	90 e0       	ldi	r25, 0x00	; 0
 8bc:	02 c0       	rjmp	.+4      	; 0x8c2 <__stack+0x63>
 8be:	88 0f       	add	r24, r24
 8c0:	99 1f       	adc	r25, r25
 8c2:	6a 95       	dec	r22
 8c4:	e2 f7       	brpl	.-8      	; 0x8be <__stack+0x5f>
 8c6:	80 95       	com	r24
 8c8:	82 23       	and	r24, r18
 8ca:	88 bb       	out	0x18, r24	; 24
 8cc:	08 95       	ret
 8ce:	41 30       	cpi	r20, 0x01	; 1
 8d0:	59 f4       	brne	.+22     	; 0x8e8 <__stack+0x89>
 8d2:	25 b3       	in	r18, 0x15	; 21
 8d4:	81 e0       	ldi	r24, 0x01	; 1
 8d6:	90 e0       	ldi	r25, 0x00	; 0
 8d8:	02 c0       	rjmp	.+4      	; 0x8de <__stack+0x7f>
 8da:	88 0f       	add	r24, r24
 8dc:	99 1f       	adc	r25, r25
 8de:	6a 95       	dec	r22
 8e0:	e2 f7       	brpl	.-8      	; 0x8da <__stack+0x7b>
 8e2:	82 2b       	or	r24, r18
 8e4:	85 bb       	out	0x15, r24	; 21
 8e6:	08 95       	ret
 8e8:	25 b3       	in	r18, 0x15	; 21
 8ea:	81 e0       	ldi	r24, 0x01	; 1
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	02 c0       	rjmp	.+4      	; 0x8f4 <__stack+0x95>
 8f0:	88 0f       	add	r24, r24
 8f2:	99 1f       	adc	r25, r25
 8f4:	6a 95       	dec	r22
 8f6:	e2 f7       	brpl	.-8      	; 0x8f0 <__stack+0x91>
 8f8:	80 95       	com	r24
 8fa:	82 23       	and	r24, r18
 8fc:	85 bb       	out	0x15, r24	; 21
 8fe:	08 95       	ret
 900:	41 30       	cpi	r20, 0x01	; 1
 902:	59 f4       	brne	.+22     	; 0x91a <__stack+0xbb>
 904:	22 b3       	in	r18, 0x12	; 18
 906:	81 e0       	ldi	r24, 0x01	; 1
 908:	90 e0       	ldi	r25, 0x00	; 0
 90a:	02 c0       	rjmp	.+4      	; 0x910 <__stack+0xb1>
 90c:	88 0f       	add	r24, r24
 90e:	99 1f       	adc	r25, r25
 910:	6a 95       	dec	r22
 912:	e2 f7       	brpl	.-8      	; 0x90c <__stack+0xad>
 914:	82 2b       	or	r24, r18
 916:	82 bb       	out	0x12, r24	; 18
 918:	08 95       	ret
 91a:	22 b3       	in	r18, 0x12	; 18
 91c:	81 e0       	ldi	r24, 0x01	; 1
 91e:	90 e0       	ldi	r25, 0x00	; 0
 920:	02 c0       	rjmp	.+4      	; 0x926 <__stack+0xc7>
 922:	88 0f       	add	r24, r24
 924:	99 1f       	adc	r25, r25
 926:	6a 95       	dec	r22
 928:	e2 f7       	brpl	.-8      	; 0x922 <__stack+0xc3>
 92a:	80 95       	com	r24
 92c:	82 23       	and	r24, r18
 92e:	82 bb       	out	0x12, r24	; 18
 930:	08 95       	ret

00000932 <write_high_nibble>:
	}
}

void write_high_nibble(unsigned char portname,unsigned char value)
{
	value<<=4;
 932:	62 95       	swap	r22
 934:	60 7f       	andi	r22, 0xF0	; 240
	switch(portname)
 936:	82 34       	cpi	r24, 0x42	; 66
 938:	79 f0       	breq	.+30     	; 0x958 <write_high_nibble+0x26>
 93a:	18 f4       	brcc	.+6      	; 0x942 <write_high_nibble+0x10>
 93c:	81 34       	cpi	r24, 0x41	; 65
 93e:	31 f0       	breq	.+12     	; 0x94c <write_high_nibble+0x1a>
 940:	08 95       	ret
 942:	83 34       	cpi	r24, 0x43	; 67
 944:	79 f0       	breq	.+30     	; 0x964 <write_high_nibble+0x32>
 946:	84 34       	cpi	r24, 0x44	; 68
 948:	99 f0       	breq	.+38     	; 0x970 <write_high_nibble+0x3e>
 94a:	08 95       	ret
	{
		case 'A':
		PORTA&=0x0f;
 94c:	8b b3       	in	r24, 0x1b	; 27
 94e:	8f 70       	andi	r24, 0x0F	; 15
 950:	8b bb       	out	0x1b, r24	; 27
		PORTA|=value;
 952:	8b b3       	in	r24, 0x1b	; 27
 954:	86 2b       	or	r24, r22
 956:	8b bb       	out	0x1b, r24	; 27
		case 'B':
		PORTB&=0x0f;
 958:	88 b3       	in	r24, 0x18	; 24
 95a:	8f 70       	andi	r24, 0x0F	; 15
 95c:	88 bb       	out	0x18, r24	; 24
		PORTB|=value;
 95e:	88 b3       	in	r24, 0x18	; 24
 960:	86 2b       	or	r24, r22
 962:	88 bb       	out	0x18, r24	; 24
		case 'C':
		PORTC&=0x0f;
 964:	85 b3       	in	r24, 0x15	; 21
 966:	8f 70       	andi	r24, 0x0F	; 15
 968:	85 bb       	out	0x15, r24	; 21
		PORTC|=value;
 96a:	85 b3       	in	r24, 0x15	; 21
 96c:	86 2b       	or	r24, r22
 96e:	85 bb       	out	0x15, r24	; 21
		case 'D':
		PORTD&=0x0f;
 970:	82 b3       	in	r24, 0x12	; 18
 972:	8f 70       	andi	r24, 0x0F	; 15
 974:	82 bb       	out	0x12, r24	; 18
		PORTD|=value;
 976:	82 b3       	in	r24, 0x12	; 18
 978:	68 2b       	or	r22, r24
 97a:	62 bb       	out	0x12, r22	; 18
 97c:	08 95       	ret

0000097e <send_falling_edge>:
}


static void send_falling_edge(void)
{
	DIO_write('A',EN,1);
 97e:	41 e0       	ldi	r20, 0x01	; 1
 980:	60 e0       	ldi	r22, 0x00	; 0
 982:	81 e4       	ldi	r24, 0x41	; 65
 984:	0e 94 3e 03 	call	0x67c	; 0x67c <DIO_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 988:	8f e9       	ldi	r24, 0x9F	; 159
 98a:	9f e0       	ldi	r25, 0x0F	; 15
 98c:	01 97       	sbiw	r24, 0x01	; 1
 98e:	f1 f7       	brne	.-4      	; 0x98c <send_falling_edge+0xe>
 990:	00 c0       	rjmp	.+0      	; 0x992 <send_falling_edge+0x14>
 992:	00 00       	nop
	_delay_ms(2);
	DIO_write('A',EN,0);
 994:	40 e0       	ldi	r20, 0x00	; 0
 996:	60 e0       	ldi	r22, 0x00	; 0
 998:	81 e4       	ldi	r24, 0x41	; 65
 99a:	0e 94 3e 03 	call	0x67c	; 0x67c <DIO_write>
 99e:	8f e9       	ldi	r24, 0x9F	; 159
 9a0:	9f e0       	ldi	r25, 0x0F	; 15
 9a2:	01 97       	sbiw	r24, 0x01	; 1
 9a4:	f1 f7       	brne	.-4      	; 0x9a2 <send_falling_edge+0x24>
 9a6:	00 c0       	rjmp	.+0      	; 0x9a8 <send_falling_edge+0x2a>
 9a8:	00 00       	nop
 9aa:	08 95       	ret

000009ac <LCD_vSend_cmd>:
	_delay_ms(2);
}
void LCD_vSend_cmd(char cmd)
{
 9ac:	cf 93       	push	r28
 9ae:	c8 2f       	mov	r28, r24
	DIO_write_port('A',cmd);
	DIO_write('B',RS,0);
	send_falling_edge();
	
	#elif defined four_bits_mode
	write_high_nibble('A',cmd>>4);
 9b0:	68 2f       	mov	r22, r24
 9b2:	62 95       	swap	r22
 9b4:	6f 70       	andi	r22, 0x0F	; 15
 9b6:	81 e4       	ldi	r24, 0x41	; 65
 9b8:	0e 94 99 04 	call	0x932	; 0x932 <write_high_nibble>
	DIO_write('A',RS,0);
 9bc:	40 e0       	ldi	r20, 0x00	; 0
 9be:	62 e0       	ldi	r22, 0x02	; 2
 9c0:	81 e4       	ldi	r24, 0x41	; 65
 9c2:	0e 94 3e 03 	call	0x67c	; 0x67c <DIO_write>
	send_falling_edge();
 9c6:	0e 94 bf 04 	call	0x97e	; 0x97e <send_falling_edge>
	write_high_nibble('A',cmd);
 9ca:	6c 2f       	mov	r22, r28
 9cc:	81 e4       	ldi	r24, 0x41	; 65
 9ce:	0e 94 99 04 	call	0x932	; 0x932 <write_high_nibble>
	DIO_write('A',RS,0);
 9d2:	40 e0       	ldi	r20, 0x00	; 0
 9d4:	62 e0       	ldi	r22, 0x02	; 2
 9d6:	81 e4       	ldi	r24, 0x41	; 65
 9d8:	0e 94 3e 03 	call	0x67c	; 0x67c <DIO_write>
	send_falling_edge();
 9dc:	0e 94 bf 04 	call	0x97e	; 0x97e <send_falling_edge>
 9e0:	8f ec       	ldi	r24, 0xCF	; 207
 9e2:	97 e0       	ldi	r25, 0x07	; 7
 9e4:	01 97       	sbiw	r24, 0x01	; 1
 9e6:	f1 f7       	brne	.-4      	; 0x9e4 <LCD_vSend_cmd+0x38>
 9e8:	00 c0       	rjmp	.+0      	; 0x9ea <LCD_vSend_cmd+0x3e>
 9ea:	00 00       	nop
	#endif
	_delay_ms(1);
}
 9ec:	cf 91       	pop	r28
 9ee:	08 95       	ret

000009f0 <LCD_vInit>:
 9f0:	2f ef       	ldi	r18, 0xFF	; 255
 9f2:	81 ee       	ldi	r24, 0xE1	; 225
 9f4:	94 e0       	ldi	r25, 0x04	; 4
 9f6:	21 50       	subi	r18, 0x01	; 1
 9f8:	80 40       	sbci	r24, 0x00	; 0
 9fa:	90 40       	sbci	r25, 0x00	; 0
 9fc:	e1 f7       	brne	.-8      	; 0x9f6 <LCD_vInit+0x6>
 9fe:	00 c0       	rjmp	.+0      	; 0xa00 <LCD_vInit+0x10>
 a00:	00 00       	nop
	_delay_ms(10);
	LCD_vSend_cmd(ENTRY_MODE); //entry mode
	_delay_ms(1); 
	
	#elif defined four_bits_mode
	DIO_vsetPINDir('A',4,1);
 a02:	41 e0       	ldi	r20, 0x01	; 1
 a04:	64 e0       	ldi	r22, 0x04	; 4
 a06:	81 e4       	ldi	r24, 0x41	; 65
 a08:	0e 94 ce 02 	call	0x59c	; 0x59c <DIO_vsetPINDir>
	DIO_vsetPINDir('A',5,1);
 a0c:	41 e0       	ldi	r20, 0x01	; 1
 a0e:	65 e0       	ldi	r22, 0x05	; 5
 a10:	81 e4       	ldi	r24, 0x41	; 65
 a12:	0e 94 ce 02 	call	0x59c	; 0x59c <DIO_vsetPINDir>
	DIO_vsetPINDir('A',6,1);
 a16:	41 e0       	ldi	r20, 0x01	; 1
 a18:	66 e0       	ldi	r22, 0x06	; 6
 a1a:	81 e4       	ldi	r24, 0x41	; 65
 a1c:	0e 94 ce 02 	call	0x59c	; 0x59c <DIO_vsetPINDir>
	DIO_vsetPINDir('A',7,1);
 a20:	41 e0       	ldi	r20, 0x01	; 1
 a22:	67 e0       	ldi	r22, 0x07	; 7
 a24:	81 e4       	ldi	r24, 0x41	; 65
 a26:	0e 94 ce 02 	call	0x59c	; 0x59c <DIO_vsetPINDir>
	DIO_vsetPINDir('A',EN,1);
 a2a:	41 e0       	ldi	r20, 0x01	; 1
 a2c:	60 e0       	ldi	r22, 0x00	; 0
 a2e:	81 e4       	ldi	r24, 0x41	; 65
 a30:	0e 94 ce 02 	call	0x59c	; 0x59c <DIO_vsetPINDir>
	DIO_vsetPINDir('A',RW,1);
 a34:	41 e0       	ldi	r20, 0x01	; 1
 a36:	61 e0       	ldi	r22, 0x01	; 1
 a38:	81 e4       	ldi	r24, 0x41	; 65
 a3a:	0e 94 ce 02 	call	0x59c	; 0x59c <DIO_vsetPINDir>
	DIO_vsetPINDir('A',RS,1);
 a3e:	41 e0       	ldi	r20, 0x01	; 1
 a40:	62 e0       	ldi	r22, 0x02	; 2
 a42:	81 e4       	ldi	r24, 0x41	; 65
 a44:	0e 94 ce 02 	call	0x59c	; 0x59c <DIO_vsetPINDir>
   	DIO_write('A',RW,0);
 a48:	40 e0       	ldi	r20, 0x00	; 0
 a4a:	61 e0       	ldi	r22, 0x01	; 1
 a4c:	81 e4       	ldi	r24, 0x41	; 65
 a4e:	0e 94 3e 03 	call	0x67c	; 0x67c <DIO_write>
	LCD_vSend_cmd(RETURN_HOME); //return home
 a52:	82 e0       	ldi	r24, 0x02	; 2
 a54:	0e 94 d6 04 	call	0x9ac	; 0x9ac <LCD_vSend_cmd>
 a58:	8f e1       	ldi	r24, 0x1F	; 31
 a5a:	9e e4       	ldi	r25, 0x4E	; 78
 a5c:	01 97       	sbiw	r24, 0x01	; 1
 a5e:	f1 f7       	brne	.-4      	; 0xa5c <LCD_vInit+0x6c>
 a60:	00 c0       	rjmp	.+0      	; 0xa62 <LCD_vInit+0x72>
 a62:	00 00       	nop
	_delay_ms(10);
	LCD_vSend_cmd(FOUR_BITS); //4bit mode
 a64:	88 e2       	ldi	r24, 0x28	; 40
 a66:	0e 94 d6 04 	call	0x9ac	; 0x9ac <LCD_vSend_cmd>
 a6a:	8f ec       	ldi	r24, 0xCF	; 207
 a6c:	97 e0       	ldi	r25, 0x07	; 7
 a6e:	01 97       	sbiw	r24, 0x01	; 1
 a70:	f1 f7       	brne	.-4      	; 0xa6e <LCD_vInit+0x7e>
 a72:	00 c0       	rjmp	.+0      	; 0xa74 <LCD_vInit+0x84>
 a74:	00 00       	nop
	_delay_ms(1);
	LCD_vSend_cmd(CURSOR_ON_DISPLAN_ON);//display on cursor on
 a76:	8e e0       	ldi	r24, 0x0E	; 14
 a78:	0e 94 d6 04 	call	0x9ac	; 0x9ac <LCD_vSend_cmd>
 a7c:	8f ec       	ldi	r24, 0xCF	; 207
 a7e:	97 e0       	ldi	r25, 0x07	; 7
 a80:	01 97       	sbiw	r24, 0x01	; 1
 a82:	f1 f7       	brne	.-4      	; 0xa80 <LCD_vInit+0x90>
 a84:	00 c0       	rjmp	.+0      	; 0xa86 <LCD_vInit+0x96>
 a86:	00 00       	nop
	_delay_ms(1);
	LCD_vSend_cmd(CLR_SCREEN);//clear the screen
 a88:	81 e0       	ldi	r24, 0x01	; 1
 a8a:	0e 94 d6 04 	call	0x9ac	; 0x9ac <LCD_vSend_cmd>
 a8e:	8f e1       	ldi	r24, 0x1F	; 31
 a90:	9e e4       	ldi	r25, 0x4E	; 78
 a92:	01 97       	sbiw	r24, 0x01	; 1
 a94:	f1 f7       	brne	.-4      	; 0xa92 <LCD_vInit+0xa2>
 a96:	00 c0       	rjmp	.+0      	; 0xa98 <LCD_vInit+0xa8>
 a98:	00 00       	nop
	_delay_ms(10);
	LCD_vSend_cmd(ENTRY_MODE); //entry mode
 a9a:	86 e0       	ldi	r24, 0x06	; 6
 a9c:	0e 94 d6 04 	call	0x9ac	; 0x9ac <LCD_vSend_cmd>
 aa0:	8f ec       	ldi	r24, 0xCF	; 207
 aa2:	97 e0       	ldi	r25, 0x07	; 7
 aa4:	01 97       	sbiw	r24, 0x01	; 1
 aa6:	f1 f7       	brne	.-4      	; 0xaa4 <LCD_vInit+0xb4>
 aa8:	00 c0       	rjmp	.+0      	; 0xaaa <LCD_vInit+0xba>
 aaa:	00 00       	nop
 aac:	08 95       	ret

00000aae <LCD_vSend_char>:
	#endif
	_delay_ms(1);
}

void LCD_vSend_char(char data)
{
 aae:	cf 93       	push	r28
 ab0:	c8 2f       	mov	r28, r24
	DIO_write_port('A',data);
	DIO_write('B',RS,1);
	send_falling_edge();
	
	#elif defined four_bits_mode
	write_high_nibble('A',data>>4);
 ab2:	68 2f       	mov	r22, r24
 ab4:	62 95       	swap	r22
 ab6:	6f 70       	andi	r22, 0x0F	; 15
 ab8:	81 e4       	ldi	r24, 0x41	; 65
 aba:	0e 94 99 04 	call	0x932	; 0x932 <write_high_nibble>
	DIO_write('A',RS,1);
 abe:	41 e0       	ldi	r20, 0x01	; 1
 ac0:	62 e0       	ldi	r22, 0x02	; 2
 ac2:	81 e4       	ldi	r24, 0x41	; 65
 ac4:	0e 94 3e 03 	call	0x67c	; 0x67c <DIO_write>
	send_falling_edge();
 ac8:	0e 94 bf 04 	call	0x97e	; 0x97e <send_falling_edge>
	write_high_nibble('A',data);
 acc:	6c 2f       	mov	r22, r28
 ace:	81 e4       	ldi	r24, 0x41	; 65
 ad0:	0e 94 99 04 	call	0x932	; 0x932 <write_high_nibble>
	DIO_write('A',RS,1);
 ad4:	41 e0       	ldi	r20, 0x01	; 1
 ad6:	62 e0       	ldi	r22, 0x02	; 2
 ad8:	81 e4       	ldi	r24, 0x41	; 65
 ada:	0e 94 3e 03 	call	0x67c	; 0x67c <DIO_write>
	send_falling_edge();
 ade:	0e 94 bf 04 	call	0x97e	; 0x97e <send_falling_edge>
 ae2:	8f ec       	ldi	r24, 0xCF	; 207
 ae4:	97 e0       	ldi	r25, 0x07	; 7
 ae6:	01 97       	sbiw	r24, 0x01	; 1
 ae8:	f1 f7       	brne	.-4      	; 0xae6 <LCD_vSend_char+0x38>
 aea:	00 c0       	rjmp	.+0      	; 0xaec <LCD_vSend_char+0x3e>
 aec:	00 00       	nop
	#endif
	_delay_ms(1);
}
 aee:	cf 91       	pop	r28
 af0:	08 95       	ret

00000af2 <LCD_vSend_string>:


void LCD_vSend_string(char *data)
{
 af2:	cf 93       	push	r28
 af4:	df 93       	push	r29
 af6:	ec 01       	movw	r28, r24
	while((*data)!='\0')
 af8:	88 81       	ld	r24, Y
 afa:	88 23       	and	r24, r24
 afc:	31 f0       	breq	.+12     	; 0xb0a <LCD_vSend_string+0x18>
 afe:	21 96       	adiw	r28, 0x01	; 1
	{
		LCD_vSend_char(*data);
 b00:	0e 94 57 05 	call	0xaae	; 0xaae <LCD_vSend_char>
}


void LCD_vSend_string(char *data)
{
	while((*data)!='\0')
 b04:	89 91       	ld	r24, Y+
 b06:	81 11       	cpse	r24, r1
 b08:	fb cf       	rjmp	.-10     	; 0xb00 <LCD_vSend_string+0xe>
	{
		LCD_vSend_char(*data);
		data++;
	}
}
 b0a:	df 91       	pop	r29
 b0c:	cf 91       	pop	r28
 b0e:	08 95       	ret

00000b10 <LCD_clearscreen>:
void LCD_clearscreen()
{
	LCD_vSend_cmd(CLR_SCREEN);
 b10:	81 e0       	ldi	r24, 0x01	; 1
 b12:	0e 94 d6 04 	call	0x9ac	; 0x9ac <LCD_vSend_cmd>
 b16:	8f e1       	ldi	r24, 0x1F	; 31
 b18:	9e e4       	ldi	r25, 0x4E	; 78
 b1a:	01 97       	sbiw	r24, 0x01	; 1
 b1c:	f1 f7       	brne	.-4      	; 0xb1a <LCD_clearscreen+0xa>
 b1e:	00 c0       	rjmp	.+0      	; 0xb20 <LCD_clearscreen+0x10>
 b20:	00 00       	nop
 b22:	08 95       	ret

00000b24 <LCD_movecursor>:
	_delay_ms(10);
}
void LCD_movecursor(char row,char coloumn)
{
	char data ;
	if(row>2||row<1||coloumn>16||coloumn<1)
 b24:	9f ef       	ldi	r25, 0xFF	; 255
 b26:	98 0f       	add	r25, r24
 b28:	92 30       	cpi	r25, 0x02	; 2
 b2a:	70 f4       	brcc	.+28     	; 0xb48 <LCD_movecursor+0x24>
 b2c:	9f ef       	ldi	r25, 0xFF	; 255
 b2e:	96 0f       	add	r25, r22
 b30:	90 31       	cpi	r25, 0x10	; 16
 b32:	60 f4       	brcc	.+24     	; 0xb4c <LCD_movecursor+0x28>
	{
		data=0x80;
	}
	else if(row==1)
 b34:	81 30       	cpi	r24, 0x01	; 1
 b36:	19 f4       	brne	.+6      	; 0xb3e <LCD_movecursor+0x1a>
	{
		data=0x80+coloumn-1 ;
 b38:	2f e7       	ldi	r18, 0x7F	; 127
 b3a:	26 0f       	add	r18, r22
 b3c:	08 c0       	rjmp	.+16     	; 0xb4e <LCD_movecursor+0x2a>
	}
	else if (row==2)
 b3e:	82 30       	cpi	r24, 0x02	; 2
 b40:	31 f4       	brne	.+12     	; 0xb4e <LCD_movecursor+0x2a>
	{
		data=0xc0+coloumn-1;
 b42:	2f eb       	ldi	r18, 0xBF	; 191
 b44:	26 0f       	add	r18, r22
 b46:	03 c0       	rjmp	.+6      	; 0xb4e <LCD_movecursor+0x2a>
void LCD_movecursor(char row,char coloumn)
{
	char data ;
	if(row>2||row<1||coloumn>16||coloumn<1)
	{
		data=0x80;
 b48:	20 e8       	ldi	r18, 0x80	; 128
 b4a:	01 c0       	rjmp	.+2      	; 0xb4e <LCD_movecursor+0x2a>
 b4c:	20 e8       	ldi	r18, 0x80	; 128
	}
	else if (row==2)
	{
		data=0xc0+coloumn-1;
	}
	LCD_vSend_cmd(data);
 b4e:	82 2f       	mov	r24, r18
 b50:	0e 94 d6 04 	call	0x9ac	; 0x9ac <LCD_vSend_cmd>
 b54:	8f ec       	ldi	r24, 0xCF	; 207
 b56:	97 e0       	ldi	r25, 0x07	; 7
 b58:	01 97       	sbiw	r24, 0x01	; 1
 b5a:	f1 f7       	brne	.-4      	; 0xb58 <LCD_movecursor+0x34>
 b5c:	00 c0       	rjmp	.+0      	; 0xb5e <LCD_movecursor+0x3a>
 b5e:	00 00       	nop
 b60:	08 95       	ret

00000b62 <timer2_overflow_init_interrupt>:
#include <avr/io.h>
#include <avr/interrupt.h>
void timer2_overflow_init_interrupt(void)
{
	/* select timer clock */
	SET_BIT(ASSR,AS2);
 b62:	82 b5       	in	r24, 0x22	; 34
 b64:	88 60       	ori	r24, 0x08	; 8
 b66:	82 bd       	out	0x22, r24	; 34
	/* select timer pre scalar 128*/
	SET_BIT(TCCR2,CS20);
 b68:	85 b5       	in	r24, 0x25	; 37
 b6a:	81 60       	ori	r24, 0x01	; 1
 b6c:	85 bd       	out	0x25, r24	; 37
	SET_BIT(TCCR2,CS22);
 b6e:	85 b5       	in	r24, 0x25	; 37
 b70:	84 60       	ori	r24, 0x04	; 4
 b72:	85 bd       	out	0x25, r24	; 37
	/* enable interrupt*/
	sei();
 b74:	78 94       	sei
	SET_BIT(TIMSK,TOIE2);
 b76:	89 b7       	in	r24, 0x39	; 57
 b78:	80 64       	ori	r24, 0x40	; 64
 b7a:	89 bf       	out	0x39, r24	; 57
 b7c:	08 95       	ret

00000b7e <__udivmodqi4>:
 b7e:	99 1b       	sub	r25, r25
 b80:	79 e0       	ldi	r23, 0x09	; 9
 b82:	04 c0       	rjmp	.+8      	; 0xb8c <__udivmodqi4_ep>

00000b84 <__udivmodqi4_loop>:
 b84:	99 1f       	adc	r25, r25
 b86:	96 17       	cp	r25, r22
 b88:	08 f0       	brcs	.+2      	; 0xb8c <__udivmodqi4_ep>
 b8a:	96 1b       	sub	r25, r22

00000b8c <__udivmodqi4_ep>:
 b8c:	88 1f       	adc	r24, r24
 b8e:	7a 95       	dec	r23
 b90:	c9 f7       	brne	.-14     	; 0xb84 <__udivmodqi4_loop>
 b92:	80 95       	com	r24
 b94:	08 95       	ret

00000b96 <_exit>:
 b96:	f8 94       	cli

00000b98 <__stop_program>:
 b98:	ff cf       	rjmp	.-2      	; 0xb98 <__stop_program>
